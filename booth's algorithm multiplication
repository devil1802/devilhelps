#include <stdio.h> 
#include <stdlib.h> // For abs()

int a = 0, b = 0, c = 0, a1 = 0, b1 = 0, com[5] = { 1, 0, 0, 0, 0 }; 
int anum[5] = {0}, anumcp[5] = {0}, bnum[5] = {0}; 
int acomp[5] = {0}, bcomp[5] = {0}, pro[5] = {0}, res[5] = {0}; 

void binary() { 
    a1 = abs(a); 
    b1 = abs(b); 
    int r, r2, i; 
    for (i = 0; i < 5; i++) { 
        r = a1 % 2; 
        a1 = a1 / 2; 
        r2 = b1 % 2; 
        b1 = b1 / 2; 
        anum[i] = r; 
        anumcp[i] = r; 
        bnum[i] = r2; 
        bcomp[i] = (r2 == 0) ? 1 : 0; 
        acomp[i] = (r == 0) ? 1 : 0; 
    } 

    // Two's complement of bcomp
    c = 0; 
    for (i = 0; i < 5; i++) { 
        res[i] = com[i] + bcomp[i] + c; 
        c = res[i] / 2; 
        res[i] = res[i] % 2; 
    } 
    for (i = 4; i >= 0; i--) { 
        bcomp[i] = res[i]; 
    } 

    // Handle negative inputs for a
    if (a < 0) { 
        c = 0; 
        for (i = 0; i < 5; i++) { 
            res[i] = com[i] + acomp[i] + c; 
            c = res[i] / 2; 
            res[i] = res[i] % 2; 
        } 
        for (i = 4; i >= 0; i--) { 
            anum[i] = res[i]; 
            anumcp[i] = res[i]; 
        } 
    } 
} 

void add(int num[]) { 
    int i; 
    c = 0; 
    for (i = 0; i < 5; i++) { 
        res[i] = pro[i] + num[i] + c; 
        c = res[i] / 2; 
        res[i] = res[i] % 2; 
    } 
    for (i = 4; i >= 0; i--) { 
        pro[i] = res[i]; 
        printf("%d", pro[i]); 
    } 
    printf(":"); 
    for (i = 4; i >= 0; i--) { 
        printf("%d", anumcp[i]); 
    } 
} 

void arshift() { 
    int temp = pro[4], temp2 = anumcp[0], i; 
    for (i = 1; i < 5; i++) { 
        pro[i - 1] = pro[i]; 
        anumcp[i - 1] = anumcp[i]; 
    } 
    pro[4] = temp; 
    anumcp[4] = temp2; 
    printf("\nAR-SHIFT: "); 
    for (i = 4; i >= 0; i--) printf("%d", pro[i]); 
    printf(":"); 
    for (i = 4; i >= 0; i--) printf("%d", anumcp[i]); 
} 

int main() { 
    int i, q = 0; 
    printf("\t\tBOOTH'S MULTIPLICATION ALGORITHM"); 
    printf("\nEnter two numbers to multiply (both < 16 and > -16): "); 

    do { 
        printf("\nEnter A: "); 
        scanf("%d", &a); 
        printf("Enter B: "); 
        scanf("%d", &b); 
        if (a >= 16 || a <= -16 || b >= 16 || b <= -16) { 
            printf("Invalid input. Please enter numbers in the range -15 to 15.\n"); 
        } 
    } while (a >= 16 || a <= -16 || b >= 16 || b <= -16); 

    printf("\nExpected product = %d", a * b); 
    binary(); 
    printf("\n\nBinary Equivalents: \nA = "); 
    for (i = 4; i >= 0; i--) printf("%d", anum[i]); 
    printf("\nB = "); 
    for (i = 4; i >= 0; i--) printf("%d", bnum[i]); 
    printf("\nB' + 1 = "); 
    for (i = 4; i >= 0; i--) printf("%d", bcomp[i]); 
    printf("\n\n"); 

    for (i = 0; i < 5; i++) { 
        printf("\n-->"); 
        if (anum[i] == q) { 
            arshift(); 
        } else if (anum[i] == 1 && q == 0) { 
            printf("\nSUB B: "); 
            add(bcomp); 
            arshift(); 
        } else { 
            printf("\nADD B: "); 
            add(bnum); 
            arshift(); 
        } 
        q = anum[i]; 
    } 

    printf("\nProduct is = "); 
    for (i = 4; i >= 0; i--) printf("%d", pro[i]); 
    for (i = 4; i >= 0; i--) printf("%d", anumcp[i]); 
    printf("\n"); 

    return 0; 
}
